absraction-
complex ideas to simple ones
individual data objects
variable-noun{name,age,number}
function- verbs{print,etc} methods
Object-(data object)- combinds variables and functions together
ex:cake and recipe

crosby.IntroduceThyself()

1. Decide name
2. Decide Method
3. Decide Attributed
ex: car
Name:String
MAke:String
Tires:Tire
ex:Tire
airpressure:Int
radius:double
width:double
aspectratio: double

Recipe book:
ingredients:
    cake: flour sugar eggs
    frosting: sugar buttar
Instructions: 



we bring them all together

message with assci art border

3 sections to a class diagram


_border : char ex:'#'

_message:string
Display():void
GetHorizontalBorder:String
GetMessageLine:String

<!-- PrintTopBorder:void
PrintMessage:void
PrintBottomBorder:void -->


Journal:
Interfaces: When there is a comon function but no relating parent class.
-class without guts
example: A outlet has a look that allows things to plug into it
-should always have an "I" in front of the title 
interface:
public interface IPhoneNumber
{
    string GetPhoneNumber();
}
name file the same as the class or interface
-does not inherit

public class Phone : IPhoneNumber
{
    private string _type;
    private string _phoneNumber
    public Phone(string type, string owner, string phoneNumber)

    public string GetPhoneNumber()
    return
}
abstracts can have variables and interfaces cannot